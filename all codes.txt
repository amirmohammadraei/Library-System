create table user_account(
    userid int not null PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) BINARY NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(50) NOT NULL, 
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


# 
delimiter $$
CREATE TRIGGER usernamegsix BEFORE insert ON user_account
    FOR EACH row 
        BEGIN
            DECLARE numLength INT;
            SET numLength = (SELECT LENGTH(NEW.username));
            IF (numLength < 6) THEN
                SIGNAL SQLSTATE '45000' set message_text='Error: Username must consist of 6 characters at least!!!';
            END IF;
end;


#
insert into user_account(username, password)
values('234234234234', 'asd');

#
# SELECT *  FROM user_account WHERE BINARY username = 'amirmohammad'


#
SELECT * FROM user_account WHERE username REGEXP '^[A-Za-z0-9]+$';


#
delimiter $$
CREATE TRIGGER usernamecomplexity BEFORE INSERT ON user_account
    FOR EACH ROW
        BEGIN
            IF NOT (SELECT NEW.username REGEXP '[A-Za-z]' and NEW.username REGEXP '[0-9]') THEN
                SIGNAL sqlstate '45000' set message_text = 'Username must have both alphabets an numbers!!';
            END IF;
END;


SELECT '234234234234' REGEXP '[A-Za-z]' and '234234234234' REGEXP '[0-9]'



######################
delimiter $$
CREATE TRIGGER passwordg8 BEFORE insert ON user_account
    FOR EACH row 
        BEGIN
            DECLARE numLength INT;
            SET numLength = (SELECT LENGTH(NEW.password));
            IF (numLength < 8) THEN
                SIGNAL SQLSTATE '45000' set message_text='Error: Password must consist of 8 characters at least!!!';
            END IF;
end;






##########################################
#
delimiter $$
CREATE TRIGGER passwordcomplexity BEFORE INSERT ON user_account
    FOR EACH ROW
        BEGIN
            IF NOT (SELECT NEW.password REGEXP '[A-Za-z]' and NEW.password REGEXP '[0-9]') THEN
                SIGNAL sqlstate '45000' set message_text = 'Password must have both alphabets an numbers!!';
            END IF;
END;



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CREATE TABLE child (
    parent_id INT,
    INDEX par_ind (parent_id),
    FOREIGN KEY (parent_id)
        REFERENCES user_account(userid)
        ON DELETE CASCADE
);




(((((((((((((((((((())))))))))))))))))))
INSERT INTO user_account (username, password) 
    VALUES ('tom37482394stills', 'asdkjahsdkj7387928388');
INSERT INTO child (parent_id)
    VALUES (LAST_INSERT_ID());